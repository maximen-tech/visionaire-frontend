name: Playwright E2E Tests

on:
  push:
    branches: [main, develop, feature/*, fix/*]
  pull_request:
    branches: [main, develop]
  workflow_dispatch: # Allow manual trigger

env:
  NODE_VERSION: '20.x'
  PLAYWRIGHT_BASE_URL: 'http://localhost:3000'

jobs:
  e2e-tests:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        shard: [1, 2, 3] # Split tests across 3 shards for parallel execution

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium

      - name: Build Next.js application
        run: npm run build

      - name: Start Next.js server
        run: |
          npm run start &
          npx wait-on http://localhost:3000 --timeout 60000

      - name: Run Playwright tests (Shard ${{ matrix.shard }})
        run: npx playwright test --shard=${{ matrix.shard }}/${{ strategy.job-total }}
        env:
          PLAYWRIGHT_BASE_URL: ${{ env.PLAYWRIGHT_BASE_URL }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-shard-${{ matrix.shard }}
          path: playwright-report/
          retention-days: 30

      - name: Upload test traces
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-shard-${{ matrix.shard }}
          path: test-results/
          retention-days: 30

  merge-reports:
    name: Merge Test Reports
    if: always()
    needs: [e2e-tests]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-reports

      - name: Merge HTML reports
        run: |
          npx playwright merge-reports --reporter html ./all-reports/playwright-report-shard-*

      - name: Upload merged HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-merged
          path: playwright-report/
          retention-days: 30

  # Optional: Run tests with backend running
  e2e-tests-with-backend:
    timeout-minutes: 90
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' # Only on manual trigger

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: test_user
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: visionaire_test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout frontend code
        uses: actions/checkout@v4
        with:
          path: frontend

      - name: Checkout backend code
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/visionaire-bff
          path: backend

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: backend/requirements.txt

      - name: Install frontend dependencies
        run: npm ci
        working-directory: frontend

      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: backend

      - name: Run database migrations
        run: alembic upgrade head
        working-directory: backend
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/visionaire_test_db

      - name: Start FastAPI backend
        run: |
          uvicorn main:app --host 0.0.0.0 --port 8000 &
          sleep 10
        working-directory: backend
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/visionaire_test_db
          REDIS_HOST: localhost
          REDIS_PORT: 6379
          APP_ENV: test

      - name: Start Celery worker
        run: |
          celery -A celery_config.celery_app worker --loglevel=info -Q analysis &
          sleep 5
        working-directory: backend
        env:
          DATABASE_URL: postgresql://test_user:test_password@localhost:5432/visionaire_test_db
          REDIS_HOST: localhost

      - name: Build and start Next.js
        run: |
          npm run build
          npm run start &
          npx wait-on http://localhost:3000 --timeout 60000
        working-directory: frontend
        env:
          NEXT_PUBLIC_API_URL: http://localhost:8000

      - name: Install Playwright
        run: npx playwright install --with-deps chromium
        working-directory: frontend

      - name: Run Playwright tests (Full Integration)
        run: npx playwright test
        working-directory: frontend
        env:
          PLAYWRIGHT_BASE_URL: http://localhost:3000

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-full-integration
          path: frontend/playwright-report/
          retention-days: 30

      - name: Upload traces on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces-full-integration
          path: frontend/test-results/
          retention-days: 30
